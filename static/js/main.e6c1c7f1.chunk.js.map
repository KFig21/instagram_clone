{"version":3,"sources":["context/firebase.js","lib/firebase.js","context/user.js","hooks/use-auth-listener.js","helpers/ProtectedRoute.js","helpers/IsUserLoggedIn.js","App.js","index.js","constants/routes.js"],"names":["FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","UserContext","useAuthListener","useState","JSON","parse","localStorage","getItem","user","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","ProtectedRoute","children","rest","render","location","to","pathname","ROUTES","state","from","IsUserLoggedIn","loggedInPath","Login","lazy","Signup","Dashboard","Profile","Post","NotFound","UploadPost","App","Provider","value","basename","fallback","path","exact","component","ReactDOM","document","getElementById","DASHBOARD","LOGIN","SIGN_UP","PROFILE","NOT_FOUND","UPLOAD_POST","POST"],"mappings":"mHAAA,WAEMA,EAAkBC,wBAAc,MAEvBD,O,gCCJf,gFAiBME,GAjBN,kBAiBiBC,IAASC,cATX,CACbC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,+CAIDC,EAAeR,IAASS,UAAxBD,Y,gCClBR,WAEME,EAAcZ,wBAAc,MAEnBY,O,6FCDA,SAASC,IACtB,MAAwBC,mBACtBC,KAAKC,MAAMC,aAAaC,QAAQ,cADlC,mBAAOC,EAAP,KAAaC,EAAb,KAGQnB,EAAaoB,qBAAWtB,KAAxBE,SAkBR,OAhBAqB,qBAAU,WACR,IAAMC,EAAWtB,EAASuB,OAAOC,oBAAmB,SAACC,GAE/CA,GACFT,aAAaU,QAAQ,WAAYZ,KAAKa,UAAUF,IAChDN,EAAQM,KAGRT,aAAaY,WAAW,YACxBT,EAAQ,UAIZ,OAAO,kBAAMG,OACZ,CAACtB,IAEG,CAAEkB,U,2KCrBI,SAASW,EAAT,GAAsD,IAA5BX,EAA2B,EAA3BA,KAAMY,EAAqB,EAArBA,SAAaC,EAAQ,iBAClE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAIf,EACKY,EAGJZ,EAWE,KATH,cAAC,IAAD,CACEgB,GAAI,CACFC,SAAUC,IACVC,MAAO,CAAEC,KAAML,U,yCCdhB,SAASM,EAAT,GAKX,IAJFrB,EAIC,EAJDA,KACAsB,EAGC,EAHDA,aACAV,EAEC,EAFDA,SACGC,EACF,iBACD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SACT,OAAKf,EAIDA,EAEA,cAAC,IAAD,CACEgB,GAAI,CACFC,SAAUK,EACVH,MAAO,CAAEC,KAAML,MAKd,cAAC,IAAD,CAAUC,GAAIE,MAbdN,MCNjB,IAAMW,EAAQC,gBAAK,kBAAM,iCACnBC,EAASD,gBAAK,kBAAM,uDACpBE,EAAYF,gBAAK,kBAAM,oEACvBG,EAAUH,gBAAK,kBAAM,8DACrBI,EAAOJ,gBAAK,kBAAM,6DAClBK,EAAWL,gBAAK,kBAAM,sDACtBM,EAAaN,gBAAK,kBAAM,8DA8CfO,MA5Cf,WACE,IAAQ/B,EAASN,cAATM,KACR,OACE,cAAC,IAAYgC,SAAb,CAAsBC,MAAO,CAAEjC,QAA/B,SACE,cAAC,IAAD,CAAQkC,SAAS,mBAAjB,SACE,cAAC,WAAD,CAAUC,SAAU,2CAApB,SACE,eAAC,IAAD,WAEE,cAACd,EAAD,CACErB,KAAMA,EACNoC,KAAMlB,IACNI,aAAcJ,IAHhB,SAKE,cAACK,EAAD,MAGF,cAACF,EAAD,CACErB,KAAMA,EACNoC,KAAMlB,IACNI,aAAcJ,IAHhB,SAKE,cAACO,EAAD,MAGF,cAACd,EAAD,CAAgBX,KAAMA,EAAMoC,KAAMlB,IAAoBmB,OAAK,EAA3D,SACE,cAACP,EAAD,MAGF,cAACnB,EAAD,CAAgBX,KAAMA,EAAMoC,KAAMlB,IAAkBmB,OAAK,EAAzD,SACE,cAACX,EAAD,MAGF,cAAC,IAAD,CAAOU,KAAMlB,IAAgBoB,UAAWX,IAExC,cAAC,IAAD,CAAOS,KAAMlB,IAAaoB,UAAWV,IAErC,cAAC,IAAD,CAAO5B,KAAMA,EAAMsC,UAAWT,c,sBC9C1CU,IAASzB,OACP,cAAC,IAAgBkB,SAAjB,CAA0BC,MAAO,CAAEnD,aAAUS,gBAA7C,SACE,cAAC,EAAD,MAEFiD,SAASC,eAAe,U,+BCX1B,8OAAO,IAAMC,EAAY,IACZC,EAAQ,SACRC,EAAU,WACVC,EAAU,eACVC,EAAY,cACZC,EAAc,eACdC,EAAO,iB","file":"static/js/main.e6c1c7f1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst FirebaseContext = createContext(null);\r\n\r\nexport default FirebaseContext;\r\n","import Firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\n// here is where we import the seed file\r\n// import { seedDatabase } from \"../seed\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAb7YcIlhDLE8kQt8MqL8m_E-LyOJtcBPs\",\r\n  authDomain: \"instagram-clone-fb42d.firebaseapp.com\",\r\n  projectId: \"instagram-clone-fb42d\",\r\n  storageBucket: \"instagram-clone-fb42d.appspot.com\",\r\n  messagingSenderId: \"611960777556\",\r\n  appId: \"1:611960777556:web:62d9ff7242bc3af05e76c1\",\r\n};\r\n\r\nconst firebase = Firebase.initializeApp(config);\r\nconst { FieldValue } = Firebase.firestore;\r\n\r\n// here is where we call the seed file, ONLY ONCE\r\n// june 30, 2021: database seeded, removed code to avoid errors\r\n\r\nexport { firebase, FieldValue };\r\n","import { createContext } from \"react\";\r\n\r\nconst UserContext = createContext(null);\r\n\r\nexport default UserContext;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport FirebaseContext from \"../context/firebase\";\r\n\r\nexport default function useAuthListener() {\r\n  const [user, setUser] = useState(\r\n    JSON.parse(localStorage.getItem(\"authUser\"))\r\n  );\r\n  const { firebase } = useContext(FirebaseContext);\r\n\r\n  useEffect(() => {\r\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n      // we have a user... therefore we can store the user in localstorage\r\n      if (authUser) {\r\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\r\n        setUser(authUser);\r\n      } else {\r\n        // we don't havean authUser, therfore clear the localstorage\r\n        localStorage.removeItem(\"authUser\");\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => listener();\r\n  }, [firebase]);\r\n\r\n  return { user };\r\n}\r\n","import PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\n\r\nexport default function ProtectedRoute({ user, children, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        if (user) {\r\n          return children;\r\n        }\r\n\r\n        if (!user) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: ROUTES.LOGIN,\r\n                state: { from: location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return null;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n  user: PropTypes.object,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport * as ROUTES from \"../constants/routes\";\r\n\r\nexport default function IsUserLoggedIn({\r\n  user,\r\n  loggedInPath,\r\n  children,\r\n  ...rest\r\n}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        if (!user) {\r\n          return children;\r\n        }\r\n\r\n        if (user) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: loggedInPath,\r\n                state: { from: location },\r\n              }}\r\n            />\r\n          );\r\n        } else {\r\n          return <Redirect to={ROUTES.LOGIN} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nIsUserLoggedIn.propTypes = {\r\n  user: PropTypes.object,\r\n  loggedInPath: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { lazy, Suspense } from \"react\";\nimport * as ROUTES from \"./constants/routes\";\nimport useAuthListener from \"./hooks/use-auth-listener\";\nimport UserContext from \"./context/user\";\n\nimport ProtectedRoute from \"./helpers/ProtectedRoute\";\nimport IsUserLoggedIn from \"./helpers/IsUserLoggedIn\";\n\nconst Login = lazy(() => import(\"./pages/Login\"));\nconst Signup = lazy(() => import(\"./pages/Signup\"));\nconst Dashboard = lazy(() => import(\"./pages/Dashboard\"));\nconst Profile = lazy(() => import(\"./pages/Profile\"));\nconst Post = lazy(() => import(\"./pages/Post\"));\nconst NotFound = lazy(() => import(\"./pages/NotFound\"));\nconst UploadPost = lazy(() => import(\"./pages/UploadPost\"));\n\nfunction App() {\n  const { user } = useAuthListener();\n  return (\n    <UserContext.Provider value={{ user }}>\n      <Router basename=\"/instagram_clone\">\n        <Suspense fallback={<p>loading...</p>}>\n          <Switch>\n            {/* login */}\n            <IsUserLoggedIn\n              user={user}\n              path={ROUTES.LOGIN}\n              loggedInPath={ROUTES.DASHBOARD}\n            >\n              <Login />\n            </IsUserLoggedIn>\n            {/* sign-up */}\n            <IsUserLoggedIn\n              user={user}\n              path={ROUTES.SIGN_UP}\n              loggedInPath={ROUTES.DASHBOARD}\n            >\n              <Signup />\n            </IsUserLoggedIn>\n            {/* post */}\n            <ProtectedRoute user={user} path={ROUTES.UPLOAD_POST} exact>\n              <UploadPost />\n            </ProtectedRoute>\n            {/* dashboard */}\n            <ProtectedRoute user={user} path={ROUTES.DASHBOARD} exact>\n              <Dashboard />\n            </ProtectedRoute>\n            {/* profile */}\n            <Route path={ROUTES.PROFILE} component={Profile} />\n            {/* post */}\n            <Route path={ROUTES.POST} component={Post} />\n            {/* not-found */}\n            <Route user={user} component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport FirebaseContext from \"./context/firebase\";\nimport { firebase, FieldValue } from \"./lib/firebase\";\nimport \"./styles/app.css\";\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n","export const DASHBOARD = \"/\";\r\nexport const LOGIN = \"/login\";\r\nexport const SIGN_UP = \"/sign-up\";\r\nexport const PROFILE = \"/p/:username\";\r\nexport const NOT_FOUND = \"./not-found\";\r\nexport const UPLOAD_POST = \"/upload-post\";\r\nexport const POST = \"/post/:docId\";\r\n"],"sourceRoot":""}