{"version":3,"sources":["hooks/use-user.js","assets/newPost.png","components/Header.js","components/MobileHeader.js","components/Footer.js","components/post/Header.js","components/upload/CroppingHelpers.js","components/upload/ImageCropper.js","components/upload/FinalizePost.js","components/upload/UploadImageModal.js","pages/UploadPost.js"],"names":["useUser","useState","activeUser","setActiveUser","user","useContext","UserContext","useEffect","a","getUserByUserId","uid","response","getUserObjByUserId","userInfo","Header","firebase","FirebaseContext","history","useHistory","className","to","ROUTES","src","logo","alt","pathname","state","type","newPostIcon","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","title","onClick","auth","signOut","onKeyDown","e","key","push","username","avatar","Footer","userId","docId","photoStorageName","page","postUser","setPostUser","deletePostButton","setDeletePostButton","doesUserExist","checkUserExists","deletePostById","setTimeout","createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","getRadianAngle","degreeValue","Math","PI","getCroppedImage","imageSrc","pixelCrop","rotation","canvas","document","createElement","ctx","getContext","maxSize","max","width","height","safeArea","sqrt","translate","rotate","drawImage","data","getImageData","putImageData","round","x","y","toDataURL","ImageCropper","selectedImage","handleImage","handleEditingCancel","handleEditingContinue","handleFinishEditingContinue","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","useCallback","croppedArea","showCroppedImage","croppedImage","console","aspect","onCropChange","onZoomChange","value","min","step","onChange","target","FinalizePost","handleFinishEditingCancel","fileName","caption","setCaption","posted","setPosted","useAuthListener","displayName","placeholder","formValue","currentTarget","length","submitPost","updateUserAvatar","UploadImageModal","setSelectedImage","imageSelectionStatus","setImageSelectionStatus","editingImage","setEditingImage","finishedEditing","setFinishedEditing","setFileName","style","zIndex","version","id","display","name","accept","file","files","fileURL","URL","createObjectURL","newImage","UploadPost","setType","location","useLocation","MobileHeader"],"mappings":"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","file":"static/js/8.56539661.chunk.js","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport UserContext from \"../context/user\";\r\nimport { getUserByUserId } from \"../services/firebase\";\r\n\r\nexport default function useUser() {\r\n  const [activeUser, setActiveUser] = useState({});\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function getUserObjByUserId() {\r\n      const [response] = await getUserByUserId(user.uid);\r\n      setActiveUser(response);\r\n    }\r\n\r\n    if (user?.uid) {\r\n      getUserObjByUserId();\r\n    }\r\n  }, [user]);\r\n\r\n  // returns userInfo variable, cannot return user variable as that is used in userContext\r\n  return { userInfo: activeUser };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/newPost.84a497c2.png\";","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FirebaseContext from \"../context/firebase\";\r\nimport UserContext from \"../context/user\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport useUser from \"../hooks/use-user\";\r\nimport newPostIcon from \"../assets/newPost.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nexport default function Header() {\r\n  const { firebase } = useContext(FirebaseContext);\r\n  const { user } = useContext(UserContext);\r\n  const { userInfo } = useUser();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <header className=\"h-16 bg-white border-b border-gray-primary sticky top-0 z-50\">\r\n      <div className=\"container mx-auto max-w-screen-lg h-full\">\r\n        <div className=\"flex justify-between h-full pr-5 pl-5\">\r\n          <div className=\"text-gray-700 text-center flex  items-center align-items cursor-pointer\">\r\n            <h1 className=\"flex justify-center w-full\">\r\n              <Link to={ROUTES.DASHBOARD} aria-label=\"instagram header\">\r\n                <img src={logo} alt=\"instagram header\" className=\"mt-2 w-28\" />\r\n              </Link>\r\n            </h1>\r\n          </div>\r\n          <div className=\"text-gray-700 text-center flex flex-none items-center align-items\">\r\n            {user ? (\r\n              <>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.UPLOAD_POST}`,\r\n                    state: { type: \"post\" },\r\n                  }}\r\n                  aria-label=\"upload post\"\r\n                >\r\n                  <img\r\n                    src={newPostIcon}\r\n                    alt=\"add post\"\r\n                    className=\"w-8 mr-4 lg:mr-6 cursor-pointer\"\r\n                  />\r\n                </Link>\r\n                <Link to={ROUTES.DASHBOARD} aria-label=\"timeline\">\r\n                  <svg\r\n                    className=\"w-8 mr-4 lg:mr-6 text-black-light cursor-pointer\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                    />\r\n                    <title>Timeline</title>\r\n                  </svg>\r\n                </Link>\r\n                <button\r\n                  type=\"button\"\r\n                  title=\"Sign-out\"\r\n                  onClick={() => firebase.auth().signOut()}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"enter\") {\r\n                      history.push(\"/login\");\r\n                      firebase.auth().signOut();\r\n                    }\r\n                  }}\r\n                >\r\n                  <svg\r\n                    className=\"w-8 mr-4 lg:mr-6 text-black-light cursor-pointer\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n                <div className=\"flex items-center cursor-pointer\">\r\n                  <Link to={`/p/${userInfo.username}`}>\r\n                    <img\r\n                      title={`${userInfo.username}`}\r\n                      className=\"rounded-full h-8 w-8 flex object-cover\"\r\n                      src={`${userInfo.avatar}`}\r\n                      alt={`${userInfo.username} profile`}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link to={ROUTES.LOGIN}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-blue-primary font-bold text-sm rounded text-white w-20 h-8\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </Link>\r\n                <Link to={ROUTES.SIGN_UP}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-white font-bold text-sm rounded text-blue-primary w-20 h-8\"\r\n                  >\r\n                    Sign-up\r\n                  </button>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FirebaseContext from \"../context/firebase\";\r\nimport UserContext from \"../context/user\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nexport default function Header() {\r\n  const { firebase } = useContext(FirebaseContext);\r\n  const { user } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <header className=\"h-12 bg-white border-b border-gray-primary sticky top-0 z-50 mobile-header relative\">\r\n      <div className=\"container mx-auto max-w-screen-lg h-full\">\r\n        <div className=\"flex justify-end h-full pr-5 pl-5\">\r\n          <div className=\"text-gray-700 text-center flex  items-center align-items cursor-pointer absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n            <h1 className=\"flex justify-center w-full\">\r\n              <Link to={ROUTES.DASHBOARD} aria-label=\"instagram header\">\r\n                <img src={logo} alt=\"instagram header\" className=\"mt-2 w-28\" />\r\n              </Link>\r\n            </h1>\r\n          </div>\r\n          <div className=\"text-gray-700 text-center flex flex-none items-center align-items\">\r\n            {user ? (\r\n              <>\r\n                <button\r\n                  type=\"button\"\r\n                  title=\"Sign-out\"\r\n                  onClick={() => firebase.auth().signOut()}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"enter\") {\r\n                      history.push(\"/login\");\r\n                      firebase.auth().signOut();\r\n                    }\r\n                  }}\r\n                >\r\n                  <svg\r\n                    className=\"w-8  text-black-light cursor-pointer\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link to={ROUTES.LOGIN}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-blue-primary font-bold text-sm rounded text-white w-20 h-8\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </Link>\r\n                <Link to={ROUTES.SIGN_UP}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-white font-bold text-sm rounded text-blue-primary w-20 h-8\"\r\n                  >\r\n                    Sign-up\r\n                  </button>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"../context/user\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport useUser from \"../hooks/use-user\";\r\nimport newPostIcon from \"../assets/newPost.png\";\r\nimport \"./components.css\";\r\n\r\nexport default function Footer() {\r\n  const { user } = useContext(UserContext);\r\n  const { userInfo } = useUser();\r\n\r\n  return (\r\n    <footer className=\"h-12 bg-white border-b border-gray-primary fixed bottom-0 z-50 w-screen\">\r\n      <div className=\"container mx-auto max-w-screen-lg h-full\">\r\n        <div className=\"flex h-full px-8\">\r\n          <div className=\"text-gray-700 text-center flex justify-between w-screen items-center align-items\">\r\n            {user ? (\r\n              <>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.UPLOAD_POST}`,\r\n                    state: { type: \"post\" },\r\n                  }}\r\n                  aria-label=\"upload post\"\r\n                >\r\n                  <img\r\n                    src={newPostIcon}\r\n                    alt=\"add post\"\r\n                    className=\"w-8  lg:mr-6 cursor-pointer\"\r\n                  />\r\n                </Link>\r\n                <Link to={ROUTES.DASHBOARD} aria-label=\"timeline\">\r\n                  <svg\r\n                    className=\"w-8  lg:mr-6 text-black-light cursor-pointer\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                    />\r\n                    <title>Timeline</title>\r\n                  </svg>\r\n                </Link>\r\n\r\n                <div className=\"flex items-center cursor-pointer\">\r\n                  <Link to={`/p/${userInfo.username}`}>\r\n                    <img\r\n                      title={`${userInfo.username}`}\r\n                      className=\"rounded-full h-8 w-8 flex object-cover\"\r\n                      src={`${userInfo.avatar}`}\r\n                      alt={`${userInfo.username} profile`}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link to={ROUTES.LOGIN}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-blue-primary font-bold text-sm rounded text-white w-20 h-8\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </Link>\r\n                <Link to={ROUTES.SIGN_UP}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-white font-bold text-sm rounded text-blue-primary w-20 h-8\"\r\n                  >\r\n                    Sign-up\r\n                  </button>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getUserByUserId, deletePostById } from \"../../services/firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useUser from \"../../hooks/use-user\";\r\n\r\nexport default function Header({ userId, docId, photoStorageName, page }) {\r\n  const [postUser, setPostUser] = useState(\"\");\r\n  const [deletePostButton, setDeletePostButton] = useState(false);\r\n  const { userInfo } = useUser();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function checkUserExists() {\r\n      const [doesUserExist] = await getUserByUserId(userId);\r\n      if (doesUserExist.userId) {\r\n        setPostUser(doesUserExist);\r\n      } else {\r\n        history.push(ROUTES.NOT_FOUND);\r\n      }\r\n    }\r\n\r\n    checkUserExists();\r\n  }, [userId, history]);\r\n\r\n  const handleX = () => {\r\n    setDeletePostButton(!deletePostButton);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deletePostById(docId, photoStorageName);\r\n    setTimeout(function () {\r\n      history.push(\"/\");\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex border-b border-gray-primary h-4 p-4 py-8\">\r\n      <div className=\"flex items-center justify-between w-full\">\r\n        <Link to={`/p/${postUser.username}`} className=\"flex items-center\">\r\n          <img\r\n            src={postUser.avatar}\r\n            className=\"rounded-full h-8 w-8 flex mr-3 object-cover\"\r\n            alt={`${postUser.username} avi`}\r\n          />\r\n          <p className=\"font-bold\">{postUser.username}</p>\r\n        </Link>\r\n        <div className=\"flex justify-center items-center\">\r\n          {deletePostButton && (\r\n            <button\r\n              onClick={handleDelete}\r\n              className=\"hover:bg-red-primary hover:text-white font-bold h-5/6 px-2 py-1 rounded mr-6 duration-150\"\r\n              title=\"confirm delete\"\r\n            >\r\n              delete?\r\n            </button>\r\n          )}\r\n          {userInfo.userId === postUser.userId && page === \"post\" && (\r\n            <p\r\n              className={`font-bold text-4xl hover:text-red-primary mb-2 cursor-pointer duration-150 ${\r\n                deletePostButton\r\n                  ? `hover:text-green-primary`\r\n                  : `hover:text-red-primary`\r\n              }`}\r\n              onClick={handleX}\r\n              title={deletePostButton ? \"cancel delete\" : \"delete your post\"}\r\n            >\r\n              ×\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  username: PropTypes.string,\r\n  docId: PropTypes.string,\r\n  photoStorageName: PropTypes.string.isRequired,\r\n  page: PropTypes.string.isRequired,\r\n};\r\n","const createImage = (url) =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", () => resolve(image));\r\n    image.addEventListener(\"error\", (error) => reject(error));\r\n    image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url;\r\n  });\r\n\r\nfunction getRadianAngle(degreeValue) {\r\n  return (degreeValue * Math.PI) / 180;\r\n}\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} image - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n * @param {number} rotation - optional rotation parameter\r\n */\r\n\r\nexport default async function getCroppedImage(\r\n  imageSrc,\r\n  pixelCrop,\r\n  rotation = 0\r\n) {\r\n  const image = await createImage(imageSrc);\r\n  const canvas = document.createElement(\"canvas\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  const maxSize = Math.max(image.width, image.height);\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea;\r\n  canvas.height = safeArea;\r\n\r\n  // translate canvas context to a central location on image to allow rotating around the center.\r\n  ctx.translate(safeArea / 2, safeArea / 2);\r\n  ctx.rotate(getRadianAngle(rotation));\r\n  ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n  // draw rotated image and store data.\r\n  ctx.drawImage(\r\n    image,\r\n    safeArea / 2 - image.width * 0.5,\r\n    safeArea / 2 - image.height * 0.5\r\n  );\r\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n  // set canvas width to final desired crop size - this will clear existing context\r\n  canvas.width = pixelCrop.width;\r\n  canvas.height = pixelCrop.height;\r\n\r\n  // paste generated rotate image with correct offsets for x,y crop values.\r\n  ctx.putImageData(\r\n    data,\r\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\r\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\r\n  );\r\n\r\n  // As Base64 string\r\n  return canvas.toDataURL(\"image/jpeg\");\r\n\r\n  // As a blob\r\n  // return new Promise((resolve) => {\r\n  //   canvas.toBlob((file) => {\r\n  //     resolve(URL.createObjectURL(file));\r\n  //   }, \"image/jpeg\");\r\n  // });\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport getCroppedImage from \"./CroppingHelpers\";\r\nimport \"./slider.css\";\r\n\r\nexport default function ImageCropper({\r\n  selectedImage,\r\n  handleImage,\r\n  handleEditingCancel,\r\n  handleEditingContinue,\r\n  handleFinishEditingContinue,\r\n}) {\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  }, []);\r\n\r\n  const showCroppedImage = useCallback(async () => {\r\n    try {\r\n      handleEditingContinue();\r\n      const croppedImage = await getCroppedImage(\r\n        selectedImage,\r\n        croppedAreaPixels\r\n      );\r\n      handleImage(croppedImage);\r\n      handleFinishEditingContinue();\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }, [\r\n    handleFinishEditingContinue,\r\n    handleEditingContinue,\r\n    handleImage,\r\n    selectedImage,\r\n    croppedAreaPixels,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"border border-gray-primary mt-12 image-cropper\">\r\n        <Cropper\r\n          image={selectedImage}\r\n          crop={crop}\r\n          zoom={zoom}\r\n          aspect={1}\r\n          onCropChange={setCrop}\r\n          onCropComplete={onCropComplete}\r\n          onZoomChange={setZoom}\r\n        ></Cropper>\r\n      </div>\r\n\r\n      <div className=\"w-full mt-5 flex flex-col justify-center items-center\">\r\n        <input\r\n          type=\"range\"\r\n          value={zoom}\r\n          min={1}\r\n          max={10}\r\n          step={0.1}\r\n          aria-labelledby=\"Zoom\"\r\n          onChange={(e) => {\r\n            setZoom(e.target.value);\r\n          }}\r\n          className=\"slider\"\r\n        />\r\n        <span className=\"mt-2\">Zoom</span>\r\n      </div>\r\n\r\n      <div className=\"h-16 mb-12 lg:mb-0 bg-white border-t border-b border-gray-primary absolute inset-x-0 bottom-0 justify-center\">\r\n        <div className=\"flex w-3/5 h-full items-center justify-around m-auto\">\r\n          <button\r\n            className=\"bg-blue-primary font-bold text-sm rounded text-white w-20 h-8\"\r\n            onClick={handleEditingCancel}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            className=\"bg-blue-primary font-bold text-sm rounded text-white w-20 h-8\"\r\n            onClick={showCroppedImage}\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport useUser from \"../../hooks/use-user\";\r\nimport useAuthListener from \"../../hooks/use-auth-listener\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport Header from \"../post/Header\";\r\nimport { submitPost, updateUserAvatar } from \"../../services/firebase\";\r\n\r\nexport default function FinalizePost({\r\n  selectedImage,\r\n  handleFinishEditingCancel,\r\n  fileName,\r\n  type,\r\n}) {\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [posted, setPosted] = useState(false);\r\n\r\n  const { userInfo } = useUser();\r\n  const { user } = useAuthListener();\r\n\r\n  const handleInput = (e) => {\r\n    const formValue = e.currentTarget.value;\r\n    if (formValue.length < 2200) {\r\n      setCaption(formValue);\r\n    }\r\n  };\r\n\r\n  const handlePost = () => {\r\n    submitPost(userInfo, selectedImage, caption, fileName);\r\n    setTimeout(function () {\r\n      setPosted(true);\r\n    }, 2000);\r\n  };\r\n\r\n  const handleAvi = () => {\r\n    updateUserAvatar(userInfo, selectedImage, fileName);\r\n    setTimeout(function () {\r\n      setPosted(true);\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center w-full h-full justify-center \">\r\n      {userInfo.username === user.displayName && (\r\n        <>\r\n          <div className=\"rounded col-span-4 border border-gray-primary bg-white\">\r\n            <Header userId={userInfo.userId} page=\"edit\" />\r\n            <div className=\"flex items-center justify-center outline-none h-full max-w-sm max-h-sm\">\r\n              <img\r\n                className=\"w-full cursor-pointer\"\r\n                src={selectedImage}\r\n                alt=\"The chosen, cropped post\"\r\n              />\r\n            </div>\r\n            {type === \"post\" && (\r\n              <form className=\"flex flex-row place-items-center justify-evenly h-auto\">\r\n                <textarea\r\n                  className=\"outline-none w-full p-2\"\r\n                  placeholder={\"Write a caption...\"}\r\n                  onChange={handleInput}\r\n                  ng-trim={false}\r\n                  type=\"text\"\r\n                />\r\n              </form>\r\n            )}\r\n          </div>\r\n          <div className=\"h-16 mb-12 lg:mb-0 bg-white border-t border-b border-gray-primary fixed bottom-0 z-50 w-screen inset-x-0 justify-center\">\r\n            <div className=\"flex w-3/5 h-full items-center justify-around m-auto\">\r\n              <button\r\n                className=\"bg-blue-primary font-bold text-sm rounded text-white w-20 h-8\"\r\n                onClick={handleFinishEditingCancel}\r\n              >\r\n                Back\r\n              </button>\r\n              <button\r\n                className=\"bg-blue-primary font-bold text-sm rounded text-white w-20 h-8\"\r\n                onClick={type === \"post\" ? handlePost : handleAvi}\r\n              >\r\n                {type === \"post\" ? \"Post\" : \"Confirm\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {posted && <Redirect to={ROUTES.DASHBOARD} />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ImageCropper from \"./ImageCropper\";\r\nimport FinalizePost from \"./FinalizePost\";\r\n\r\nexport default function UploadImageModal({ type }) {\r\n  const [selectedImage, setSelectedImage] = useState(\"\");\r\n  const [imageSelectionStatus, setImageSelectionStatus] = useState(false);\r\n  const [editingImage, setEditingImage] = useState(false);\r\n  const [finishedEditing, setFinishedEditing] = useState(false);\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  const initialUploadHandler = (e) => {\r\n    const file = e.target.files[0];\r\n    const fileURL = URL.createObjectURL(file);\r\n    setFileName(file.name);\r\n    setSelectedImage(fileURL);\r\n    setEditingImage(!editingImage);\r\n    setImageSelectionStatus(!imageSelectionStatus);\r\n  };\r\n\r\n  const handleImage = (newImage) => {\r\n    setSelectedImage(newImage);\r\n  };\r\n\r\n  const handleEditingCancel = () => {\r\n    setEditingImage(!editingImage);\r\n    setImageSelectionStatus(!imageSelectionStatus);\r\n  };\r\n\r\n  const handleEditingContinue = () => {\r\n    setEditingImage(!editingImage);\r\n  };\r\n\r\n  const handleFinishEditingCancel = () => {\r\n    setFinishedEditing(!finishedEditing);\r\n    setEditingImage(!editingImage);\r\n  };\r\n\r\n  const handleFinishEditingContinue = () => {\r\n    setFinishedEditing(!finishedEditing);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center w-full\">\r\n      {!imageSelectionStatus && !editingImage && !finishedEditing && (\r\n        <div\r\n          className=\"p-24 shadow-lg bg-white outline-none\"\r\n          style={{ zIndex: \"5\" }}\r\n        >\r\n          <label>\r\n            <div className=\"flex items-center justify-center \">\r\n              <svg\r\n                version=\"1.1\"\r\n                id=\"Capa_1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 490.2 490.2\"\r\n                className=\"w-24 text-black-light cursor-pointer\"\r\n              >\r\n                <path\r\n                  d=\"M418.5,418.5c95.6-95.6,95.6-251.2,0-346.8s-251.2-95.6-346.8,0s-95.6,251.2,0,346.8S322.9,514.1,418.5,418.5z M89,89\r\n                 c86.1-86.1,226.1-86.1,312.2,0s86.1,226.1,0,312.2s-226.1,86.1-312.2,0S3,175.1,89,89z\"\r\n                />\r\n                <path\r\n                  d=\"M245.1,336.9c3.4,0,6.4-1.4,8.7-3.6c2.2-2.2,3.6-5.3,3.6-8.7v-67.3h67.3c3.4,0,6.4-1.4,8.7-3.6c2.2-2.2,3.6-5.3,3.6-8.7\r\n                 c0-6.8-5.5-12.3-12.2-12.2h-67.3v-67.3c0-6.8-5.5-12.3-12.2-12.2c-6.8,0-12.3,5.5-12.2,12.2v67.3h-67.3c-6.8,0-12.3,5.5-12.2,12.2\r\n                 c0,6.8,5.5,12.3,12.2,12.2h67.3v67.3C232.8,331.4,238.3,336.9,245.1,336.9z\"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              name=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={initialUploadHandler}\r\n            />\r\n            <div className=\"flex items-end justify-evenly bg-none font-semibold cursor-pointer outline-none p-4\">\r\n              Choose image to upload\r\n            </div>\r\n          </label>\r\n        </div>\r\n      )}\r\n      {selectedImage &&\r\n        !finishedEditing &&\r\n        editingImage &&\r\n        imageSelectionStatus && (\r\n          <div style={{ zIndex: \"5\" }}>\r\n            <ImageCropper\r\n              selectedImage={selectedImage}\r\n              handleImage={handleImage}\r\n              handleEditingCancel={handleEditingCancel}\r\n              handleEditingContinue={handleEditingContinue}\r\n              handleFinishEditingContinue={handleFinishEditingContinue}\r\n            />\r\n          </div>\r\n        )}\r\n      {finishedEditing && imageSelectionStatus && (\r\n        <div style={{ zIndex: \"5\" }}>\r\n          <FinalizePost\r\n            selectedImage={selectedImage}\r\n            handleFinishEditingCancel={handleFinishEditingCancel}\r\n            fileName={fileName}\r\n            type={type}\r\n          />\r\n        </div>\r\n      )}\r\n      <p className=\"absolute\" style={{ zIndex: \"1\" }}>\r\n        loading... (possibly)\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport MobileHeader from \"../components/MobileHeader\";\r\nimport UploadImageModal from \"../components/upload/UploadImageModal\";\r\n\r\nexport default function UploadPost() {\r\n  const [type, setType] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    setType(location.state.type);\r\n  }, [location.state.type, type]);\r\n\r\n  return (\r\n    <div className=\"bg-gray-background\">\r\n      <Header />\r\n      <MobileHeader />\r\n      <div\r\n        className=\"mx-auto max-w-screen-lg justify-center items-center flex\"\r\n        style={{ height: \"75vh\" }}\r\n      >\r\n        <UploadImageModal type={type} />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}