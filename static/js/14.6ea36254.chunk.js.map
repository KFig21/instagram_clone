{"version":3,"sources":["components/post/Image.js","components/post/Post.js","components/Timeline.js","components/sidebar/User.js","components/sidebar/SuggestedProfile.js","components/sidebar/Suggestions.js","components/sidebar/Sidebar.js","pages/Dashboard.js"],"names":["Image","src","caption","alt","Post","content","timeline","commentInput","useRef","docId","className","Header","userId","photoStorageName","page","to","imageSrc","Actions","totalLikes","likes","length","likedPhoto","userLikedPhoto","handleFocus","current","focus","Footer","username","Comments","comments","posted","dateCreated","Timeline","photos","usePhotos","style","marginTop","map","count","width","height","User","fullName","avatar","SuggestedProfile","profileDocId","loggedInUserDocId","profileId","useState","followed","setFollowed","a","updateLoggedInUserFollowing","updateFollowedUserFollowers","type","onClick","Suggestions","following","profiles","setProfiles","useEffect","getSuggestedProfiles","response","suggestedProfiles","profile","Sidebar","userInfo","useUser","Dashboard","document","title","MobileHeader"],"mappings":"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","file":"static/js/14.6ea36254.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Image({ src, caption }) {\r\n  return <img src={src} alt={caption} />;\r\n}\r\n\r\nImage.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n};\r\n","import { useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Header from \"./Header\";\r\nimport Image from \"./Image\";\r\nimport Actions from \"./Actions\";\r\nimport Footer from \"./Footer\";\r\nimport Comments from \"./Comments\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Post({ content, timeline }) {\r\n  const commentInput = useRef(null);\r\n  const handleFocus = () => commentInput.current.focus();\r\n  const docId = content.docId;\r\n\r\n  return (\r\n    <div className=\"lg:rounded col-span-4 border-t border-b lg:border border-gray-primary bg-white mt-4 mb-2 relative\">\r\n      <Header\r\n        userId={content.userId}\r\n        docId={content.docId}\r\n        photoStorageName={content.photoStorageName}\r\n        page=\"post\"\r\n        timeline={timeline}\r\n      />\r\n      <Link to={`/post/${docId}`}>\r\n        <Image src={content.imageSrc} caption={content.caption} />\r\n      </Link>\r\n      <Actions\r\n        docId={content.docId}\r\n        totalLikes={content.likes.length}\r\n        likedPhoto={content.userLikedPhoto}\r\n        handleFocus={handleFocus}\r\n      />\r\n      <Footer username={content.username} caption={content.caption} />\r\n      <Comments\r\n        docId={content.docId}\r\n        comments={content.comments}\r\n        posted={content.dateCreated}\r\n        commentInput={commentInput}\r\n        page=\"timeline\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nPost.propTypes = {\r\n  content: PropTypes.shape({\r\n    username: PropTypes.string.isRequired,\r\n    imageSrc: PropTypes.string.isRequired,\r\n    caption: PropTypes.string.isRequired,\r\n    docId: PropTypes.string.isRequired,\r\n    userLikedPhoto: PropTypes.bool.isRequired,\r\n    likes: PropTypes.array.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    dateCreated: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport usePhotos from \"../hooks/use-photos\";\r\nimport Post from \"./post/Post\";\r\n\r\nexport default function Timeline() {\r\n  // get the logged in user's photos\r\n  const { photos } = usePhotos();\r\n\r\n  return (\r\n    <div className=\"container col-span-2\" style={{ marginTop: \"-17px\" }}>\r\n      {!photos ? (\r\n        <>\r\n          <Skeleton count={4} width={500} height={500} className=\"mt-6\" />\r\n        </>\r\n      ) : photos?.length > 0 ? (\r\n        photos.map((content) => (\r\n          <Post key={content.docId} content={content} timeline={true} />\r\n        ))\r\n      ) : (\r\n        <p className=\"text-center text-2xl mt-5 lg:mt-10\">\r\n          Follow users to see photos!\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport default function User({ username, fullName, avatar }) {\r\n  return !username || !fullName ? (\r\n    <Skeleton count={1} height={61} />\r\n  ) : (\r\n    <Link\r\n      to={`/p/${username}`}\r\n      className=\"grid grid-cols-4 gap-4 mb-6 items-center\"\r\n    >\r\n      <div className=\"flex items-center justify-between col-span-1\">\r\n        <img\r\n          src={avatar}\r\n          className=\"rounded-full h-12 w-12 flex mr-3 object-cover\"\r\n          alt=\"avi\"\r\n        />\r\n      </div>\r\n      <div className=\"col-span-3\">\r\n        <p className=\"text-sm font-bold\">{username}</p>\r\n        <p className=\"text-sm\">{fullName}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\nUser.propTypes = {\r\n  username: PropTypes.string,\r\n  fullName: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  updateLoggedInUserFollowing,\r\n  updateFollowedUserFollowers,\r\n} from \"../../services/firebase\";\r\n\r\nexport default function SuggestedProfile({\r\n  profileDocId,\r\n  loggedInUserDocId,\r\n  username,\r\n  profileId,\r\n  userId,\r\n  avatar,\r\n}) {\r\n  const [followed, setFollowed] = useState(false);\r\n\r\n  async function handleFollowUser() {\r\n    setFollowed(true);\r\n\r\n    await updateLoggedInUserFollowing(loggedInUserDocId, profileId, false);\r\n    await updateFollowedUserFollowers(profileDocId, userId);\r\n  }\r\n\r\n  return !followed ? (\r\n    <div className=\"flex flex-row items-center align-items justify-between\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <img\r\n          src={avatar}\r\n          className=\"rounded-full h-8 w-8 flex object-cover mr-3\"\r\n          alt=\"avis\"\r\n        />\r\n        <Link to={`/p/${username}`}>\r\n          <p className=\"font-bold text-sm\">{username}</p>\r\n        </Link>\r\n      </div>\r\n      <button\r\n        className=\"text-xs font-bold text-blue-primary\"\r\n        type=\"button\"\r\n        onClick={handleFollowUser}\r\n      >\r\n        follow\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nSuggestedProfile.propTypes = {\r\n  profileDocId: PropTypes.string.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  profileId: PropTypes.string.isRequired,\r\n  userId: PropTypes.string.isRequired,\r\n  loggedInUserDocId: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport SuggestedProfile from \"./SuggestedProfile\";\r\nimport { getSuggestedProfiles } from \"../../services/firebase\";\r\n\r\nexport default function Suggestions({ userId, following, loggedInUserDocId }) {\r\n  const [profiles, setProfiles] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function suggestedProfiles() {\r\n      const response = await getSuggestedProfiles(userId, following);\r\n      setProfiles(response);\r\n    }\r\n\r\n    if (userId) {\r\n      suggestedProfiles();\r\n    }\r\n  }, [userId, following]);\r\n\r\n  return !profiles ? (\r\n    <Skeleton count={10} height={150} className=\"mt-5\" />\r\n  ) : profiles.length > 0 ? (\r\n    <div className=\"rounded flex flex-col\">\r\n      <div className=\"text-sm flex items-center align-items justify-between mb-2\">\r\n        <p className=\"font-bold text-gray-base\">Suggestions for you</p>\r\n      </div>\r\n      <div className=\"mt-4 grid gap-5\">\r\n        {profiles.map((profile) => (\r\n          <SuggestedProfile\r\n            key={profile.docId}\r\n            profileDocId={profile.docId}\r\n            username={profile.username}\r\n            profileId={profile.userId}\r\n            userId={userId}\r\n            avatar={profile.avatar}\r\n            loggedInUserDocId={loggedInUserDocId}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nSuggestions.propTypes = {\r\n  userId: PropTypes.string,\r\n  following: PropTypes.array,\r\n  loggedInUserDocId: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport useUser from \"../../hooks/use-user\";\r\nimport User from \"./User\";\r\nimport Suggestions from \"./Suggestions\";\r\n\r\nexport default function Sidebar() {\r\n  // user info for further development\r\n  const { userInfo } = useUser();\r\n\r\n  // use destructuring the user to make further coding easier\r\n  // const {\r\n  //   user: { fullName, username, userId, following, avatar, docId },\r\n  // } = useUser();\r\n\r\n  return (\r\n    <div className=\"p-4 flex justify-center col-span-2 lg:block lg:col-span-1 lg:relative mb-24\">\r\n      <div className=\"flex flex-col lg:fixed\">\r\n        <User\r\n          username={userInfo.username}\r\n          fullName={userInfo.fullName}\r\n          avatar={userInfo.avatar}\r\n        />\r\n        <Suggestions\r\n          userId={userInfo.userId}\r\n          following={userInfo.following}\r\n          loggedInUserDocId={userInfo.docId}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Timeline from \"../components/Timeline\";\r\nimport Header from \"../components/Header\";\r\nimport MobileHeader from \"../components/MobileHeader\";\r\nimport Footer from \"../components/Footer\";\r\nimport Sidebar from \"../components/sidebar/Sidebar\";\r\n\r\nexport default function Dashboard() {\r\n  useEffect(() => {\r\n    document.title = \"Petstagram\";\r\n  }, []);\r\n  return (\r\n    <div className=\"bg-gray-background \">\r\n      <Header />\r\n      <MobileHeader />\r\n      <div className=\"grid sm:grid-cols-2 2xl:grid-cols-3 gap-4 justify between mx-auto max-w-screen-md\">\r\n        <Timeline />\r\n        <Sidebar />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}