{"version":3,"sources":["services/firebase.js","hooks/use-user.js","assets/newPost.png","components/Header.js"],"names":["doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","length","getUserByUsername","map","item","data","docId","id","getUserByUserId","userId","getSuggestedProfiles","following","limit","user","filter","profile","includes","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","doc","update","FieldValue","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","followers","getPhotos","fetchFollowingPhotos","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","userFollowedPhotosWithUserDetails","fetchUserPhotos","userPhotos","userPhotosWithUserDetails","photosWithUserDetails","getFollowingOrFollowers","users","fetchFollowing","followingResults","getUserPhotosByUsername","isUserFollowingProfile","loggedInUserUsername","profileUserId","response","toggleFollow","activeUserDocId","followingUserID","updateUserAvatar","userInfo","image","fileName","oldImageName","avatarStorageName","newImageName","Math","round","random","avatar","storageRef","storage","ref","child","putString","then","console","log","deleteRef","delete","catch","error","submitPost","selectedImage","caption","newDocRef","set","comments","dateCreated","Date","now","imageSrc","photoStorageName","getPostInfoByDocId","photosByDocId","cleanPhotosByDocId","deletePostById","photoToDeleteInfo","undefined","i","commentId","userDocId","userToUpdateComments","userFilteredCommentsArray","p","merge","deleteCommentByCommentId","allComments","filteredCommentsArray","deleteProfile","followerToRemove","photoDocId","postInfo","auth","currentUser","signOut","useUser","useState","activeUser","setActiveUser","useContext","UserContext","useEffect","uid","getUserObjByUserId","Header","FirebaseContext","history","useHistory","className","to","ROUTES","src","alt","pathname","state","type","newPostIcon","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","title","onClick","onKeyDown","e","key","push"],"mappings":"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","file":"static/js/0.f380edb9.chunk.js","sourcesContent":["import { firebase, FieldValue } from \"../lib/firebase\";\r\n\r\nexport async function doesUsernameExist(username) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"username\", \"==\", username)\r\n    .get();\r\n\r\n  return result.docs.length > 0;\r\n}\r\n\r\nexport async function getUserByUsername(username) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"username\", \"==\", username)\r\n    .get();\r\n\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n}\r\n\r\nexport async function getPostByDocId(docId) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .where(\"docId\", \"==\", docId)\r\n    .get();\r\n\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n}\r\n\r\n// get user from the firestore wher userId == userId(passed from the auth)\r\nexport async function getUserByUserId(userId) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"userId\", \"==\", userId)\r\n    .get();\r\n\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n}\r\n\r\nexport async function getSuggestedProfiles(userId, following) {\r\n  const result = await firebase.firestore().collection(\"users\").limit(10).get();\r\n\r\n  return result.docs\r\n    .map((user) => ({ ...user.data(), docId: user.id }))\r\n    .filter(\r\n      (profile) =>\r\n        profile.userId !== userId && !following.includes(profile.userId)\r\n    );\r\n}\r\n\r\n// update who the logged in user is following when they 'follow' someone\r\nexport async function updateLoggedInUserFollowing(\r\n  loggedInUserDocId,\r\n  profileId,\r\n  isFollowingProfile\r\n) {\r\n  return firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .doc(loggedInUserDocId)\r\n    .update({\r\n      following: isFollowingProfile\r\n        ? FieldValue.arrayRemove(profileId)\r\n        : FieldValue.arrayUnion(profileId),\r\n    });\r\n}\r\n\r\n// update followers for accounts that receive new followers\r\nexport async function updateFollowedUserFollowers(\r\n  profileDocId, //currently logged in user doc id\r\n  loggedInUserDocId, // the user that they request to follow\r\n  isFollowingProfile // true/false, are they currently following this person\r\n) {\r\n  return firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .doc(profileDocId)\r\n    .update({\r\n      followers: isFollowingProfile\r\n        ? FieldValue.arrayRemove(loggedInUserDocId)\r\n        : FieldValue.arrayUnion(loggedInUserDocId),\r\n    });\r\n}\r\n\r\nexport async function getPhotos(userId, following, username) {\r\n  // get photos of following\r\n  const fetchFollowingPhotos = await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .where(\"userId\", \"in\", following)\r\n    .get();\r\n\r\n  const userFollowedPhotos = fetchFollowingPhotos.docs.map((photo) => ({\r\n    ...photo.data(),\r\n    docId: photo.id,\r\n  }));\r\n\r\n  const userFollowedPhotosWithUserDetails = await Promise.all(\r\n    userFollowedPhotos.map(async (photo) => {\r\n      let userLikedPhoto = false;\r\n      if (photo.likes.includes(userId)) {\r\n        userLikedPhoto = true;\r\n      }\r\n      const user = await getUserByUserId(photo.userId);\r\n      const { username } = user[0];\r\n      return { username, ...photo, userLikedPhoto };\r\n    })\r\n  );\r\n\r\n  // get photos of user\r\n  const fetchUserPhotos = await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .where(\"username\", \"==\", username)\r\n    .get();\r\n\r\n  const userPhotos = fetchUserPhotos.docs.map((photo) => ({\r\n    ...photo.data(),\r\n    docId: photo.id,\r\n  }));\r\n\r\n  const userPhotosWithUserDetails = await Promise.all(\r\n    userPhotos.map(async (photo) => {\r\n      let userLikedPhoto = false;\r\n      if (photo.likes.includes(userId)) {\r\n        userLikedPhoto = true;\r\n      }\r\n      const user = await getUserByUserId(photo.userId);\r\n      const { username } = user[0];\r\n      return { username, ...photo, userLikedPhoto };\r\n    })\r\n  );\r\n\r\n  // combine the arrays\r\n  const photosWithUserDetails = [\r\n    ...userFollowedPhotosWithUserDetails,\r\n    ...userPhotosWithUserDetails,\r\n  ];\r\n\r\n  return photosWithUserDetails;\r\n}\r\n\r\nexport async function getFollowingOrFollowers(users) {\r\n  // get users\r\n  const fetchFollowing = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"userId\", \"in\", users)\r\n    .get();\r\n\r\n  const followingResults = fetchFollowing.docs.map((user) => ({\r\n    ...user.data(),\r\n  }));\r\n\r\n  return followingResults;\r\n}\r\n\r\nexport async function getUserPhotosByUsername(username) {\r\n  const [user] = await getUserByUsername(username);\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .where(\"userId\", \"==\", user.userId)\r\n    .get();\r\n\r\n  return result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n    username: username,\r\n  }));\r\n}\r\n\r\nexport async function isUserFollowingProfile(\r\n  loggedInUserUsername,\r\n  profileUserId\r\n) {\r\n  const result = await firebase\r\n    .firestore()\r\n    .collection(\"users\")\r\n    .where(\"username\", \"==\", loggedInUserUsername) // karl (active logged in user)\r\n    .where(\"following\", \"array-contains\", profileUserId)\r\n    .get();\r\n\r\n  const [response = {}] = result.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n\r\n  return response.userId;\r\n}\r\n\r\nexport async function toggleFollow(\r\n  isFollowingProfile,\r\n  activeUserDocId,\r\n  profileDocId,\r\n  profileUserId,\r\n  followingUserID\r\n) {\r\n  await updateLoggedInUserFollowing(\r\n    activeUserDocId, // the logged in user's docId\r\n    profileUserId, // the person they are tying to follow's userId\r\n    isFollowingProfile // are they following this profile? (true/false)\r\n  );\r\n  await updateFollowedUserFollowers(\r\n    profileDocId, // the logged in user's userId\r\n    followingUserID, // the person they are tying to follow's docId\r\n    isFollowingProfile // are they following this profile? (true/false)\r\n  );\r\n}\r\n\r\nexport async function updateUserAvatar(userInfo, image, fileName) {\r\n  const oldImageName = userInfo.avatarStorageName;\r\n  const newImageName = `${Math.round(Math.random() * 1000000)}.${fileName}`;\r\n  var newDocRef = firebase.firestore().collection(\"users\").doc(userInfo.docId);\r\n\r\n  // update avatar location in users collection\r\n  newDocRef.update({\r\n    avatar: `https://firebasestorage.googleapis.com/v0/b/instagram-clone-fb42d.appspot.com/o/${newImageName}?alt=media`,\r\n    avatarStorageName: `${newImageName}`,\r\n  });\r\n\r\n  // add image to firestore storage\r\n  const storageRef = firebase.storage().ref();\r\n  const fileRef = storageRef.child(newImageName);\r\n  fileRef.putString(image, \"data_url\").then(() => {\r\n    console.log(\"uploaded file\", newImageName);\r\n  });\r\n\r\n  // Create a reference to the file to delete\r\n  var deleteRef = storageRef.child(`${oldImageName}`);\r\n\r\n  // Delete the file\r\n  if (oldImageName !== \"no-img.png\") {\r\n    deleteRef\r\n      .delete()\r\n      .then(function () {\r\n        console.log(\"file successfully deleted\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport async function submitPost(userInfo, selectedImage, caption, fileName) {\r\n  const newImageName = `${Math.round(Math.random() * 1000000)}.${fileName}`;\r\n  var newDocRef = firebase.firestore().collection(\"photos\").doc();\r\n\r\n  // add post to firestore database\r\n  console.log(\"fileName\", fileName);\r\n  newDocRef.set({\r\n    caption: caption,\r\n    comments: [],\r\n    likes: [],\r\n    docId: newDocRef.id,\r\n    userId: userInfo.userId,\r\n    username: userInfo.username,\r\n    dateCreated: Date.now(),\r\n    imageSrc: `https://firebasestorage.googleapis.com/v0/b/instagram-clone-fb42d.appspot.com/o/${newImageName}?alt=media`,\r\n    photoStorageName: newImageName,\r\n  });\r\n\r\n  // add image to firestore storage\r\n  const storageRef = firebase.storage().ref();\r\n  const fileRef = storageRef.child(newImageName);\r\n  fileRef.putString(selectedImage, \"data_url\");\r\n\r\n  // return null;\r\n}\r\n\r\n// replaces a filter that I was unable to use with asynchronus functions\r\nexport async function getPostInfoByDocId(docId, userId) {\r\n  const photosByDocId = await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .where(\"docId\", \"==\", docId)\r\n    .get();\r\n\r\n  const cleanPhotosByDocId = photosByDocId.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n\r\n  const result = await Promise.all(\r\n    cleanPhotosByDocId.map(async (photo) => {\r\n      let userLikedPhoto = false;\r\n      if (photo.likes.includes(userId)) {\r\n        userLikedPhoto = true;\r\n      }\r\n      const user = await getUserByUserId(photo.userId);\r\n      const { username } = user[0];\r\n      return { username, ...photo, userLikedPhoto };\r\n    })\r\n  );\r\n\r\n  return result;\r\n}\r\n\r\nexport async function deletePostById(docId, photoStorageName) {\r\n  // save photo as a variable. Before we delete the photo we need to remove the likes and comments by other users from their firestore document\r\n\r\n  const photoToDeleteInfo = await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .doc(docId)\r\n    .get();\r\n\r\n  console.log(photoToDeleteInfo);\r\n  console.log(photoToDeleteInfo.data());\r\n  const comments = await photoToDeleteInfo.data().comments;\r\n  const likes = await photoToDeleteInfo.data().likes;\r\n\r\n  console.log(\"comments\", comments);\r\n  console.log(\"likes\", likes);\r\n\r\n  // removes all likes for this post in the users collection.\r\n  if (likes !== undefined) {\r\n    for (let i = 0; i < likes.length; i++) {\r\n      const user = await getUserByUserId(likes[i]);\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(user[0].docId)\r\n        .update({\r\n          likes: FieldValue.arrayRemove(docId),\r\n        });\r\n      console.log(\"2\");\r\n    }\r\n  }\r\n\r\n  // delete all comments for this post in the users collection.\r\n  if (comments !== undefined) {\r\n    for (let i = 0; i < comments.length; i++) {\r\n      const commentId = comments[i].commentId;\r\n      let userToUpdateComments = await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(comments[i].userDocId)\r\n        .get();\r\n\r\n      userToUpdateComments = userToUpdateComments.data();\r\n      console.log(userToUpdateComments);\r\n\r\n      const userFilteredCommentsArray = userToUpdateComments.comments.filter(\r\n        (p) => p.commentId !== commentId\r\n      );\r\n\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(comments[i].userDocId)\r\n        .set(\r\n          {\r\n            comments: userFilteredCommentsArray,\r\n          },\r\n          { merge: true }\r\n        );\r\n    }\r\n  }\r\n\r\n  // delete from firestore photos collection\r\n  await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .doc(docId)\r\n    .delete()\r\n    .then(() => {\r\n      console.log(\"Document successfully deleted!\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error removing document: \", error);\r\n    });\r\n\r\n  // delete from firebase storage\r\n  // Create a reference to the file to delete\r\n  const storageRef = firebase.storage().ref();\r\n  var deleteRef = storageRef.child(`${photoStorageName}`);\r\n\r\n  // Delete the file\r\n  if (photoStorageName !== \"no-img.png\") {\r\n    deleteRef\r\n      .delete()\r\n      .then(function () {\r\n        console.log(\"file successfully deleted\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n\r\nexport async function deleteCommentByCommentId(\r\n  docId,\r\n  allComments,\r\n  commentId,\r\n  userInfo\r\n) {\r\n  const filteredCommentsArray = allComments.filter(\r\n    (p) => p.commentId !== commentId\r\n  );\r\n\r\n  firebase.firestore().collection(\"photos\").doc(docId).set(\r\n    {\r\n      comments: filteredCommentsArray,\r\n    },\r\n    { merge: true }\r\n  );\r\n\r\n  const userFilteredCommentsArray = userInfo.comments.filter(\r\n    (p) => p.commentId !== commentId\r\n  );\r\n\r\n  firebase.firestore().collection(\"users\").doc(userInfo.docId).set(\r\n    {\r\n      comments: userFilteredCommentsArray,\r\n    },\r\n    { merge: true }\r\n  );\r\n}\r\n\r\n// delete profile and all its interactions\r\n//----------------------------------------\r\n//-- 1. removes user from other users followings\r\n//-- 2. removes user from other users followers\r\n//-- 3. delete all comments by the user on other users posts\r\n//-- 4. delete all likes by the user on other users posts\r\n//-- 5. delete users photos\r\n//---- 5a. fetch users photos for deletion\r\n//---- 5b. loop through userPhotos and:\r\n//------ 5b1. removes all likes for this post (made by other users) in the users collection.\r\n//------ 5b2. delete all comments for this post (made by other users) in the users collection.\r\n//------ 5b3. delete from storage and firestore\r\n//-- 6. delete profile from users collection\r\n//-- 7. delete from firebase auth\r\nexport async function deleteProfile(userInfo) {\r\n  const { userId, following, followers, docId, comments, likes } = userInfo;\r\n\r\n  // removes user from other users followings\r\n  if (following !== undefined) {\r\n    for (let i = 0; i < following.length; i++) {\r\n      let followerToRemove = await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .where(\"userId\", \"==\", following[i])\r\n        .get();\r\n\r\n      followerToRemove = followerToRemove.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n      }));\r\n\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(followerToRemove[0].docId)\r\n        .update({\r\n          followers: FieldValue.arrayRemove(userId),\r\n        });\r\n    }\r\n  }\r\n\r\n  // removes user from other users followers\r\n  if (followers !== undefined) {\r\n    for (let i = 0; i < followers.length; i++) {\r\n      let followerToRemove = await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .where(\"userId\", \"==\", followers[i])\r\n        .get();\r\n\r\n      followerToRemove = followerToRemove.docs.map((item) => ({\r\n        ...item.data(),\r\n        docId: item.id,\r\n      }));\r\n\r\n      firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(followerToRemove[0].docId)\r\n        .update({\r\n          following: FieldValue.arrayRemove(userId),\r\n        });\r\n    }\r\n  }\r\n\r\n  // delete all comments by the user on other users posts\r\n  if (comments !== undefined) {\r\n    for (let i = 0; i < comments.length; i++) {\r\n      let photoDocId = comments[i].photoDocId;\r\n      let commentId = comments[i].commentId;\r\n      let postInfo = await getPostInfoByDocId(photoDocId, userId);\r\n      let allComments = postInfo[0].comments;\r\n      deleteCommentByCommentId(photoDocId, allComments, commentId, userInfo);\r\n    }\r\n  }\r\n\r\n  // delete all likes by the user on other users posts\r\n  if (likes !== undefined) {\r\n    for (let i = 0; i < likes.length; i++) {\r\n      // removes likes by user in the photos collection\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"photos\")\r\n        .doc(likes[i])\r\n        .update({\r\n          likes: FieldValue.arrayRemove(userId),\r\n        });\r\n\r\n      // removes likes in the users collection. This is unecessary since we are deleting the user anyway but i wanted to see if it would work\r\n      await firebase\r\n        .firestore()\r\n        .collection(\"users\")\r\n        .doc(docId)\r\n        .update({\r\n          likes: FieldValue.arrayRemove(likes[i]),\r\n        });\r\n    }\r\n  }\r\n\r\n  // fetch users photos for deletion\r\n  console.log(\"delete: \" + userId);\r\n  let userPhotos = await firebase\r\n    .firestore()\r\n    .collection(\"photos\")\r\n    .where(\"userId\", \"==\", userId)\r\n    .get();\r\n\r\n  userPhotos = userPhotos.docs.map((item) => ({\r\n    ...item.data(),\r\n    docId: item.id,\r\n  }));\r\n\r\n  console.log(userPhotos);\r\n\r\n  // loop through userPhotos and delete from storage and firestore\r\n  for (let i = 0; i < userPhotos.length; i++) {\r\n    let photoStorageName = userPhotos[i].photoStorageName;\r\n    let docId = userPhotos[i].docId;\r\n    deletePostById(docId, photoStorageName);\r\n  }\r\n\r\n  // delete from firebase auth\r\n  const user = firebase.auth().currentUser;\r\n  user\r\n    .delete()\r\n    .then(() => {\r\n      console.log(\"deleted from auth\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n  // delete profile from users\r\n  await firebase.firestore().collection(\"users\").doc(docId).delete();\r\n\r\n  firebase.auth().signOut();\r\n}\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport UserContext from \"../context/user\";\r\nimport { getUserByUserId } from \"../services/firebase\";\r\n\r\nexport default function useUser() {\r\n  const [activeUser, setActiveUser] = useState({});\r\n  const { user } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function getUserObjByUserId() {\r\n      const [response] = await getUserByUserId(user.uid);\r\n      setActiveUser(response);\r\n    }\r\n\r\n    if (user?.uid) {\r\n      getUserObjByUserId();\r\n    }\r\n  }, [user]);\r\n\r\n  // returns userInfo variable, cannot return user variable as that is used in userContext\r\n  return { userInfo: activeUser };\r\n}\r\n","export default __webpack_public_path__ + \"static/media/newPost.84a497c2.png\";","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FirebaseContext from \"../context/firebase\";\r\nimport UserContext from \"../context/user\";\r\nimport * as ROUTES from \"../constants/routes\";\r\nimport useUser from \"../hooks/use-user\";\r\nimport newPostIcon from \"../assets/newPost.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  const { firebase } = useContext(FirebaseContext);\r\n  const { user } = useContext(UserContext);\r\n  const { userInfo } = useUser();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <header className=\"h-16 bg-white border-b border-gray-primary sticky top-0 z-50\">\r\n      <div className=\"container mx-auto max-w-screen-lg h-full\">\r\n        <div className=\"flex justify-between h-full\">\r\n          <div className=\"text-gray-700 text-center flex items-center align-items cursor-pointer\">\r\n            <h1 className=\"flex justify-center w-full\">\r\n              <Link to={ROUTES.DASHBOARD} aria-label=\"instagram header\">\r\n                <img\r\n                  src=\"/images/logo.png\"\r\n                  alt=\"instagram header\"\r\n                  className=\"mt-2 w-6/12\"\r\n                />\r\n              </Link>\r\n            </h1>\r\n          </div>\r\n          <div className=\"text-gray-700 text-center flex items-center align-items\">\r\n            {user ? (\r\n              <>\r\n                <Link\r\n                  to={{\r\n                    pathname: `${ROUTES.UPLOAD_POST}`,\r\n                    state: { type: \"post\" },\r\n                  }}\r\n                  aria-label=\"upload post\"\r\n                >\r\n                  <img\r\n                    src={newPostIcon}\r\n                    alt=\"add post\"\r\n                    className=\"w-8 mr-6 cursor-pointer\"\r\n                  />\r\n                </Link>\r\n                <Link to={ROUTES.DASHBOARD} aria-label=\"timeline\">\r\n                  <svg\r\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\r\n                    />\r\n                    <title>Timeline</title>\r\n                  </svg>\r\n                </Link>\r\n                <button\r\n                  type=\"button\"\r\n                  title=\"Sign-out\"\r\n                  onClick={() => firebase.auth().signOut()}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === \"enter\") {\r\n                      history.push(\"/login\");\r\n                      firebase.auth().signOut();\r\n                    }\r\n                  }}\r\n                >\r\n                  <svg\r\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n                <div className=\"flex items-center cursor-pointer\">\r\n                  <Link to={`/p/${userInfo.username}`}>\r\n                    <img\r\n                      title={`${userInfo.username}`}\r\n                      className=\"rounded-full h-8 w-8 flex object-cover\"\r\n                      src={`${userInfo.avatar}`}\r\n                      alt={`${userInfo.username} profile`}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Link to={ROUTES.LOGIN}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-blue-primary font-bold text-sm rounded text-white w-20 h-8\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </Link>\r\n                <Link to={ROUTES.SIGN_UP}>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"bg-white font-bold text-sm rounded text-blue-primary w-20 h-8\"\r\n                  >\r\n                    Sign-up\r\n                  </button>\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"],"sourceRoot":""}